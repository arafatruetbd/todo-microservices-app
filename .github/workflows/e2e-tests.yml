name: E2E Tests

on:
  push:
    branches: [master]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v4

      # 2. Set up Node.js (for Playwright & frontend tests later)
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3. Install dependencies (only e2e)
      - run: cd e2e && yarn install --frozen-lockfile

      # 3.5. Generate .env file for docker-compose
      - name: Create .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "USER_DB_NAME=${{ secrets.USER_DB_NAME }}" >> .env
          echo "USER_DB_PORT=${{ secrets.USER_DB_PORT }}" >> .env
          echo "TODO_DB_NAME=${{ secrets.TODO_DB_NAME }}" >> .env
          echo "TODO_DB_PORT=${{ secrets.TODO_DB_PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      # 4. Start services with docker-compose
      - name: Start services
        run: docker compose up -d --build

      # Debug: list running containers
      - name: Docker status
        run: docker ps -a

      # Debug: show logs for backend services
      - name: Docker logs
        run: docker compose logs --tail=200 user-service todo-service frontend

      # 5. Healthcheck loop for APIs & frontend
      - name: Wait for API & Client
        run: |
          for i in {1..30}; do
            echo "⏳ Checking user-service... attempt $i"
            if curl -sSf http://localhost:5000/health > /dev/null; then
              echo "✅ user-service ready"
              break
            fi
            sleep 5
          done

          for i in {1..30}; do
            echo "⏳ Checking todo-service... attempt $i"
            if curl -sSf http://localhost:5001/health > /dev/null; then
              echo "✅ todo-service ready"
              break
            fi
            sleep 5
          done

          for i in {1..30}; do
            echo "⏳ Checking frontend... attempt $i"
            if curl -sSf http://localhost:3000 > /dev/null; then
              echo "✅ frontend ready"
              break
            fi
            sleep 5
          done
